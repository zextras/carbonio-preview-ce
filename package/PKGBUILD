targets=(
   "centos"
   "ubuntu"
)
pkgname="carbonio-preview-ce"
pkgver="0.2.11"
pkgrel="1"
pkgdesc="Carbonio Preview"
pkgdesclong=(
  "Carbonio Preview"
)
maintainer="Zextras <packages@zextras.com>"
url="https://www.zextras.com/"
section="admin"
priority="optional"
arch="amd64"
license=("AGPL-3.0-only")

depends:apt=(
   "carbonio-openjdk"
   "libreoffice-calc"
   "libreoffice-core"
   "libreoffice-draw-nogui"
   "libreoffice-impress-nogui"
   "libreoffice-java-common"
   "libreoffice-writer-nogui"
   "pending-setups"
   "python3-pkg-resources"
   "python3-uno"
   "python3>=3.8"
   "service-discover"
)

depends:yum=(
  "carbonio-docs-core"
  "pending-setups"
  "python38"
  "service-discover"
)

makedepends:yum=(
  "python38-pip"
)

makedepends:apt=(
  "python3-pip"
)

sources=(
  "carbonio-preview.service"
  "carbonio-preview-sidecar.service"
  "carbonio-preview-start.sh"
  "carbonio-preview.hcl"
  "carbonio-preview.sh"
  "carbonio-preview"
  "config.ini"
  "messages.ini"
  "intentions.json"
  "policies.json"
  "service-protocol.json"
)
hashsums=(
  "skip"
  "skip"
  "skip"
  "skip"
  "skip"
  "skip"
  "skip"
  "skip"
  "skip"
  "skip"
  "skip"
  "skip"
)

backup=(
  "/etc/zextras/service-discover/carbonio-preview.hcl"
  "/etc/carbonio/preview/config.ini"
)

package() {
  cd "${srcdir}"/../staging

  pip3 install \
    --prefix="${pkgdir}/opt/zextras/common" \
    -r requirements.txt

  python3 setup.py install \
    --no-compile \
    --prefix=/opt/zextras/common \
    --root="${pkgdir}"

  install -Dm755 "${srcdir}/carbonio-preview-start.sh" \
    "${pkgdir}/usr/bin/carbonio-preview-start.sh"

  install -Dm755 "${srcdir}/carbonio-preview" \
    "${pkgdir}/usr/bin/carbonio-preview"

  install -Dm644 "${srcdir}/carbonio-preview.service" \
    "${pkgdir}/lib/systemd/system/carbonio-preview.service"

  install -Dm644 "${srcdir}/carbonio-preview-sidecar.service" \
    "${pkgdir}/lib/systemd/system/carbonio-preview-sidecar.service"

  install -Dm644 "${srcdir}/carbonio-preview.hcl" \
    "${pkgdir}/etc/zextras/service-discover/carbonio-preview.hcl"

  install -Dm755 "${srcdir}/carbonio-preview.sh" \
    "${pkgdir}/etc/zextras/pending-setups.d/carbonio-preview.sh"

  install -Dm644 "${srcdir}/intentions.json" \
    "${pkgdir}/etc/carbonio/preview/service-discover/intentions.json"

  install -Dm644 "${srcdir}/policies.json" \
    "${pkgdir}/etc/carbonio/preview/service-discover/policies.json"

  install -Dm644 "${srcdir}/service-protocol.json" \
    "${pkgdir}/etc/carbonio/preview/service-discover/service-protocol.json"

  install -Dm644 "${srcdir}/config.ini" \
    "${pkgdir}/etc/carbonio/preview/config.ini"

  install -Dm644 "${srcdir}/messages.ini" \
    "${pkgdir}/etc/carbonio/preview/messages.ini"

  install -Ddm755 "${pkgdir}/var/log/carbonio/preview/"

  # Remove generated bytecode
  find "${pkgdir}" -iname "*.pyc" -exec rm {} \;
}

postinst() {
  getent group 'carbonio-preview' >/dev/null ||
    groupadd -r 'carbonio-preview'
  getent passwd 'carbonio-preview' >/dev/null ||
    useradd -r -m \
      -d '/var/lib/carbonio-preview' \
      -g 'carbonio-preview' \
      -s /sbin/nologin 'carbonio-preview'

  chown carbonio-preview:carbonio-preview -R "/var/log/carbonio/preview"

  if [ -d /run/systemd/system ]; then
    systemctl daemon-reload >/dev/null 2>&1 || :
    systemctl enable carbonio-preview.service >/dev/null 2>&1 || :
    systemctl enable carbonio-preview-sidecar.service >/dev/null 2>&1 || :
  fi

  echo "======================================================"
  echo "Carbonio Preview installed successfully!"
  echo "You must run pending-setups to configure it correctly."
  echo "======================================================"
}

prerm() {
  if [ -d /run/systemd/system ]; then
    systemctl --no-reload disable carbonio-preview.service >/dev/null 2>&1 || :
    systemctl --no-reload disable carbonio-preview-sidecar.service >/dev/null 2>&1 || :
    systemctl stop carbonio-preview.service >/dev/null 2>&1 || :
    systemctl stop carbonio-preview-sidecar.service >/dev/null 2>&1 || :
  fi
}

postrm() {
  if [ -d /run/systemd/system ]; then
    systemctl daemon-reload >/dev/null 2>&1 || :
  fi
}

